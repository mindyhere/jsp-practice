<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<!-- 게시글 목록 조회()-->
	<select id="list" resultType="board.BoardDTO">
		select *
		from (
			select rownum as rn, A.*
			from (
				select num,writer,subject,reg_date,hit,
					(select count(*) from board_comment where board_num=b.num) count_comments,
					filename,filesize,down,
					group_num,re_order,re_depth
				from board b
				order by group_num desc, re_order asc
			) A
		)
		where rn between #{start} and #{end}
	</select>

	<!-- 게시판의 게시글 수(전체 레코드 개수) -->
	<select id="count" resultType="int">
		select count(*) from board
	</select>
	
	<!-- 비밀번호가 일치하는지 체크 -->
	<select id="check_pwd" resultType="String">
		select passwd from board
		where num=#{num} and passwd=#{passwd}
	</select>
	
	<!-- 상세페이지 → 선택한 레코드 정보 가져오기 -->
	<select id="view" resultType="board.BoardDTO">
		select * from board where num=#{num}
	</select>
	
	<!-- 댓글 목록 -->
	<select id="list_comment" resultType="board.BoardCommentDTO">
		select 
			comment_num, board_num, writer, contents, 
			to_char(reg_date, 'yyyy-mm-dd HH:mi:ss') reg_date
		from board_comment
		where board_num=#{board_num}
		order by comment_num
	</select>
	
	<!-- 게시글에 첨부한 파일명 가져오기 -->
	<select id="filename" resultType="String">
		select filename from board where num=#{num}
	</select>
	
	<!-- 게시글 검색 → 검색기준에 따라 레코드 조회 -->
	<select id="search_list" resultType="board.BoardDTO">
		select *
		from (
			select rownum as rn, A.*
			from (
				select num,writer,subject,reg_date,hit,
					(select count(*) from board_comment where board_num=b.num) count_comments,
					filename,filesize,down,group_num,re_order,re_depth
				from board b
				<choose>
					<when test="search_option !='all' ">
						where ${search_option} like '%' || #{keyword} || '%'
					</when>
					<when test="search_option =='all' ">
						where writer like '%' || #{keyword} || '%'
						or subject like '%' || #{keyword} || '%'
						or contents like '%' || #{keyword} || '%'
					</when>
				</choose>
				order by group_num desc, re_order asc
			) A
		)
		where rn between #{start} and #{end}
	</select>
	
	<!-- 검색결과 → 레코드 건수 -->
	<select id="search_count" resultType="int">
		select count(*) from board
		<choose>
			<when test="search_option !='all' ">
				where ${search_option} like '%' || #{keyword} || '%'
			</when>
			<when test="search_option =='all' ">
				where writer like '%' || #{keyword} || '%'
				or subject like '%' || #{keyword} || '%'
				or contents like '%' || #{keyword} || '%'
			</when>
		</choose>
	</select>
	
	<!-- board 테이블에 레코드 insert -->
	<insert id="insert">
		insert into board
			(num, writer, subject, passwd,
			group_num, re_order, re_depth, 
			contents, ip, filename, filesize)
		values
			((select nvl(max(num)+1,1) from board), #{writer},#{subject},#{passwd},
			(select nvl(max(num)+1,1) from board), 1, 0,
			#{contents},#{ip},#{filename},#{filesize})
	</insert>

	<!-- board_comment 테이블에 레코드 insert -->
	<insert id="insert_comment">
		insert into board_comment (comment_num, board_num, writer, contents)
		values ((select nvl(max(comment_num)+1,1) from board_comment),
			#{board_num}, #{writer}, #{contents})
	</insert>
	
	<!-- board 테이블에 레코드(답변글) insert -->
	<insert id="insert_reply">
		insert into board
			(num, writer, subject, passwd,
			group_num, re_order, re_depth, 
			contents, ip, filename, filesize)
		values
			((select nvl(max(num)+1, 1) from board), #{writer}, #{subject}, #{passwd},
			#{group_num}, #{re_order}, #{re_depth}, 
			#{contents}, #{ip}, #{filename}, #{filesize})
	</insert>
	
	<!-- 선택 게시글의 조회수 update -->
	<update id="plus_hit">
		update board set hit=hit+1 where num=#{num}
	</update>
	
	<!-- 게시글(레코드) 수정 -->
	<update id="update">
		update board 
		set
			writer=#{writer}, subject=#{subject}, contents=#{contents},
			filename=#{filename}, filesize=#{filesize}, down=#{down}
		where num=#{num}
	</update>
	
	<!-- 답변글 추가 시 게시글 순서 반영 -->
	<update id="update_order">
		update board 
		set re_order=re_order+1
		where group_num=#{group_num}
			and re_order >= #{re_order}
	</update>
	
	<!-- 첨부파일 다운로드 횟수 update -->
	<update id="plus_down">
		update board set down=down+1 where num=#{num}
	</update>

	<!-- 선택한 게시글(레코드) 삭제 -->
	<delete id="delete">
		delete from board where num=#{num}
	</delete>

	
</mapper>